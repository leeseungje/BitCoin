{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","then","response","json","coinId","endDate","Math","floor","Date","now","startDate","Chart","useQuery","fetchCoinHistory","refetchInterval","isLoading","dataSource","data","type","series","name","map","item","list","open","toFixed","high","low","close","x","market_cap","y","options","chart","height","width","toolbar","show","background","title","text","align","yaxis","tooltip","enabled","xaxis","labels","axisTicks","axisBorder","PriceWrap","styled","div","props","theme","textColor","PriceTxt","Title","p","Coast","span","Price","fetchCoinLatest","className","h1","accentColor","Container","Header","header","Overview","OverviewItem","Description","Tabs","Tab","isActive","Loader","ButtonBack","Arrow","motion","svg","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","to","xmlns","viewBox","path","d","variants","hidden","pathLength","fill","visible","initial","animate","transition","default","duration","delay","Helmet","rank","symbol","quotes","USD","price","description","total_supply","max_supply","CoinList","ul","li","bgColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","darkTheme","cardBgColor","lightTheme","ToggleButton","input","active","css","GlobalStyle","createGlobalStyle","App","useState","isDark","setDark","onClick","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.9258fd4c.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport async function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport async function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\nexport async function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport async function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n\r\nexport async function fetchCoinLatest(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/latest/`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport React from \"react\";\r\n\r\ninterface chartProps {\r\n  coinId: string;\r\n}\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\nfunction Chart({ coinId }: chartProps) {\r\n  const { isLoading, data: dataSource } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading Chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              name: \"candlestick\",\r\n              data: dataSource?.map((item) => {\r\n                const list = [\r\n                  item.open.toFixed(2),\r\n                  item.high.toFixed(2),\r\n                  item.low.toFixed(2),\r\n                  item.close.toFixed(2),\r\n                ];\r\n                return {\r\n                  x: new Date(item.market_cap),\r\n                  y: list,\r\n                };\r\n              }),\r\n            },\r\n          ]}\r\n          options={{\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"white\",\r\n            },\r\n            title: {\r\n              text: `${coinId} Chart`,\r\n              align: \"right\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n            xaxis: {\r\n              labels: {\r\n                show: false,\r\n              },\r\n              axisTicks: {\r\n                show: false,\r\n              },\r\n              axisBorder: {\r\n                show: false,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinLatest } from \"../api\";\r\n\r\nconst PriceWrap = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  display: grid;\r\n  color: ${(props) => props.theme.textColor};\r\n  align-items: center;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n`;\r\nconst PriceTxt = styled.div`\r\n  text-align: center;\r\n  &.high {\r\n    color: #d5482d;\r\n  }\r\n  &.low {\r\n    color: #2469cf;\r\n  }\r\n`;\r\nconst Title = styled.p``;\r\nconst Coast = styled.span`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n`;\r\n\r\ninterface PriceProps {\r\n  coinId: string;\r\n}\r\n\r\ninterface CoinLatest {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Price({ coinId }: PriceProps) {\r\n  const { isLoading, data: dataSource } = useQuery<CoinLatest[]>(\r\n    [\"latest\", coinId],\r\n    () => fetchCoinLatest(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading Price...\"\r\n      ) : (\r\n        <PriceWrap>\r\n          <PriceTxt>\r\n            <Title>Open Price </Title>\r\n            <Coast>${dataSource?.[0].open.toFixed(2)}</Coast>\r\n          </PriceTxt>\r\n          <PriceTxt>\r\n            <Title>Close Price </Title>\r\n            <Coast>${dataSource?.[0].close.toFixed(2)}</Coast>\r\n          </PriceTxt>\r\n          <PriceTxt className=\"high\">\r\n            <Title>high Price</Title>\r\n            <Coast>${dataSource?.[0].high.toFixed(2)}</Coast>\r\n          </PriceTxt>\r\n          <PriceTxt className=\"low\">\r\n            <Title>low Price </Title>\r\n            <Coast>${dataSource?.[0].low.toFixed(2)}</Coast>\r\n          </PriceTxt>\r\n        </PriceWrap>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Price;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\nimport { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span {\r\n    color: ${(props) => props.theme.textColor};\r\n  }\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0;\r\n  gap: 10px;\r\n`;\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0;\r\n  border-radius: 10px;\r\n  a {\r\n    display: block;\r\n    color: ${(props) =>\r\n      props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  text-align: center;\r\n`;\r\nconst ButtonBack = styled.p`\r\n  position: absolute;\r\n  left: 3vw;\r\n  top: 2vh;\r\n  width: 10vw;\r\n  height: 4vw;\r\n  font-size: 12px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    color: ${(props) => props.theme.textColor};\r\n  }\r\n`;\r\nconst Arrow = styled(motion.svg)`\r\n  margin-right: 10px;\r\n  width: 30px;\r\n  height: auto;\r\n  path {\r\n    stroke-width: 5px;\r\n    stroke: ${(props) => props.theme.textColor};\r\n  }\r\n`;\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface RouterState {\r\n  name: string;\r\n}\r\n\r\ninterface InfoDate {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceDate {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouterState>();\r\n  const priceMatch = useRouteMatch(`/${coinId}/price`);\r\n  const chartMatch = useRouteMatch(`/${coinId}/chart`);\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoDate>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceDate>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId)\r\n  );\r\n  const loading = infoLoading || tickersLoading;\r\n  const arrowVariant = {\r\n    hidden: {\r\n      pathLength: 0,\r\n      fill: \"rgba(57, 155, 155, 0)\",\r\n    },\r\n    visible: {\r\n      pathLength: 1,\r\n      fill: \"rgba(57, 155, 155, 1)\",\r\n    },\r\n  };\r\n  return (\r\n    <Container>\r\n      <ButtonBack>\r\n        <Link to={`/`}>\r\n          <Arrow xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n            <motion.path\r\n              d=\"M504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zM256 472c-118.7 0-216-96.1-216-216 0-118.7 96.1-216 216-216 118.7 0 216 96.1 216 216 0 118.7-96.1 216-216 216zm-12.5-92.5l-115.1-115c-4.7-4.7-4.7-12.3 0-17l115.1-115c4.7-4.7 12.3-4.7 17 0l6.9 6.9c4.7 4.7 4.7 12.5-.2 17.1L181.7 239H372c6.6 0 12 5.4 12 12v10c0 6.6-5.4 12-12 12H181.7l85.6 82.5c4.8 4.7 4.9 12.4.2 17.1l-6.9 6.9c-4.8 4.7-12.4 4.7-17.1 0z\"\r\n              variants={arrowVariant}\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n              transition={{\r\n                default: {\r\n                  duration: 3,\r\n                },\r\n                fill: {\r\n                  duration: 1,\r\n                  delay: 2,\r\n                },\r\n              }}\r\n            ></motion.path>\r\n          </Arrow>\r\n        </Link>\r\n      </ButtonBack>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state?.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state?.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes?.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Supply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/${coinId}/price`}>\r\n              <Price coinId={coinId} />\r\n            </Route>\r\n            <Route path={`/${coinId}/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coin;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst CoinList = styled.ul``;\r\nconst Coin = styled.li`\r\n  background-color: white;\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    transition: color 0.2s ease-in;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    color: black;\r\n  }\r\n  &:hover {\r\n    color: ${(props) => props.theme.accentColor};\r\n  }\r\n`;\r\nconst Loader = styled.div`\r\n  text-align: center;\r\n`;\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data: dataSource } = useQuery<ICoin[]>(\r\n    \"allCoins\",\r\n    fetchCoins\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>코인</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>코인</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinList>\r\n          {dataSource?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}/chart`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coins;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\ninterface IRouterProps {}\r\n\r\nfunction Router({}: IRouterProps) {\r\n  // coinId가 변수 값을 받는다\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/:coinId\">\r\n            <Coin />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Coins />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\nexport default Router;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"rgba(255,255,255,1)\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"transparent\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"whitesmoke\",\r\n  textColor: \"rgba(0,0,0,1)\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"white\",\r\n};\r\n","import Router from \"./Router\";\r\nimport styled, { createGlobalStyle, css } from \"styled-components\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nconst ToggleButton = styled.input<{ active: boolean }>`\r\n  z-index: 3;\r\n  width: 60px;\r\n  height: 30px;\r\n  -webkit-appearance: none;\r\n  position: absolute;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  right: 20px;\r\n  top: 2vw;\r\n  border-radius: 50px;\r\n  background: white;\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 25px;\r\n    height: 25px;\r\n    border-radius: 50px;\r\n    background: black;\r\n    left: 5px;\r\n    top: 50%;\r\n    margin-top: -12.5px;\r\n    transition: 0.5s;\r\n  }\r\n  ${(props) =>\r\n    !props.active &&\r\n    css`\r\n      box-shadow: inset 0 0 100px rgba(0, 0, 0, 1);\r\n      &:before {\r\n        left: auto;\r\n        right: 5px;\r\n        background: white;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1.2;\r\n  font-weight: 300;\r\n  font-family: \"source sans prop\", sans-serif;\r\n  color: black;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  background-color:${(props) => props.theme.bgColor};\r\n}\r\na {\r\n  text-decoration:none;\r\n  color: inherit;\r\n}`;\r\nfunction App() {\r\n  const [isDark, setDark] = useState(true);\r\n  const toggleClick = () => {\r\n    setDark(!isDark);\r\n  };\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\r\n        <GlobalStyle />\r\n        <Router />\r\n        <ReactQueryDevtools />\r\n        <ToggleButton\r\n          onClick={toggleClick}\r\n          active={isDark}\r\n          type=\"checkbox\"\r\n          id=\"btn\"\r\n        />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <QueryClientProvider client={queryClient}>\r\n      <App />\r\n    </QueryClientProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}